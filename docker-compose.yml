version: '3'

services:
  mongodb1:
    image: mongo:4
    restart: always
    container_name: mongodb1
    volumes:
    - mongodata1:/data/db
    ports:
      - 27017:27017
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]
    networks:
      - app_network
  mongodb2:
    image: mongo:4
    restart: always
    container_name: mongodb2
    volumes:
    - mongodata2:/data/db
    ports:
      - 27018:27017
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1"]
    networks:
      - app_network
  mongodb3:
    image: mongo:4
    restart: always
    container_name: mongodb3
    volumes:
    - mongodata3:/data/db
    ports:
      - 27019:27017
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rsmongo", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1" ]
    networks:
      - app_network
  mongosetup:
    image: "mongo-setup"
    build: "./mongo-setup"
    container_name: "mongosetup"
    depends_on:
      - mongodb1
    volumes:
      - mongostatus:/data/
    networks:
      - app_network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start
    ports:
      - '3000:3000'
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    networks:
      - app_network
  nginx: 
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - nextjs
    networks:
      - app_network
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb1:27017,mongodb2:27017,mongodb3:27017/?replicaSet=rsmongo
    networks:
      - app_network
  typesense:
    image: typesense/typesense:0.24.1
    container_name: typesense
    restart: always
    ports:
      - "8108:8108"
    volumes:
      - ./data:/data
    environment:
      - TYPESENSE_API_KEY=xyz
      - TYPESENSE_DATA_DIR=/data
    networks:
      - app_network

volumes:
    mongodata1:
    mongodata2:
    mongodata3:
    mongostatus:

networks:
  app_network:
    driver: bridge